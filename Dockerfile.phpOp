FROM php:7.4-apache


# Set working directory
WORKDIR /var/www/
EXPOSE 8001

# Install dependencies and clear cache
# git, unzip & zip are for composer

RUN apt-get update \
    && apt-get install -y \
        unzip \
        zip \
 # https://github.com/docker-library/php/issues/61
        zlib1g-dev \ 
        libzip-dev \ 
        git \
# libonig-dev required for mbstring cf. https://github.com/docker-library/php/issues/880
        libonig-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
# Install extensions
RUN docker-php-ext-install -j$(nproc) pdo_mysql mbstring zip \
    && docker-php-source delete

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
# Install https://github.com/hirak/prestissimo
 && composer global require hirak/prestissimo

# Add user for application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

COPY apache/sites-available/000-default.conf /etc/apache2/sites-available/000-default.conf
COPY apache/conf-available/z-app.conf /etc/apache2/conf-available/z-app.conf
RUN a2enmod rewrite remoteip headers && a2enconf z-app

# Copy composer.lock and composer.json
COPY ./phpOp/composer.lock ./phpOp/composer.json /var/www/html/
# scripts required for doctrine
RUN cd /var/www/html/ \
    && composer install --prefer-dist --no-dev --no-autoloader --no-suggest --no-progress \
    && rm -rf ~/.composer


# Copy existing application directory contents
COPY --chown=www:www ./phpOp /var/www/html
# Copy existing application directory permissions
COPY ./phpOp/.env.example /var/www/html/.env

# Grant access to cache
RUN chown www-data:www-data /var/www/html/cache


# Finish composer
RUN cd /var/www/html/ && composer dump-autoload --no-scripts --no-dev --optimize

# Change current user to www
USER www